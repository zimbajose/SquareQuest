/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bin.Attack;
import bin.BattleRenderer;
import bin.Enemy;
import bin.MusicPlayer;
import bin.Scenery;
import bin.Troop;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Jose
 */
public class Battle extends javax.swing.JFrame implements java.io.Serializable{

    /**
     * Creates new form Battle
     */
    public boolean attackhappening = false;
    public boolean uppressed = false;
    public boolean downpressed = false;
    public boolean leftpressed = false;
    public boolean rightpressed = false;
    public Enemy enemy;
    public int defaultposx;
    public int defaultposy;
    public JLabel squary;
    public JLabel attackbutton;
    Map m;
    MusicPlayer mp;
    public Battle(Troop t,Map m){
        initComponents();
        this.m =m;
        battlepane.setVisible(false);
        enemy = t.getEnemy();
        this.enemyicon.setIcon(enemy.getSprite());
        defaultposx = square.getX();
        defaultposy = square.getY();
        this.hplabel.setText("Hp:"+m.p.hp+"/100");
        
        mp = new MusicPlayer(t.getMusic());
        mp.start();
        squary = square;
        attackbutton = atayckbutton;
        
    }
    
    
    public void endMusic(){
        mp.keepPlaying = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hplabel = new javax.swing.JLabel();
        enemyicon = new javax.swing.JLabel();
        atayckbutton = new javax.swing.JLabel();
        battlepane = new javax.swing.JPanel();
        square = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(null);

        hplabel.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        hplabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(hplabel);
        hplabel.setBounds(10, 50, 140, 50);

        enemyicon.setMaximumSize(new java.awt.Dimension(200, 200));
        enemyicon.setMinimumSize(new java.awt.Dimension(200, 200));
        enemyicon.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(enemyicon);
        enemyicon.setBounds(230, 20, 350, 230);

        atayckbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/atayck.png"))); // NOI18N
        getContentPane().add(atayckbutton);
        atayckbutton.setBounds(140, 490, 500, 110);

        battlepane.setBackground(new java.awt.Color(0, 0, 0));
        battlepane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 6));
        battlepane.setForeground(new java.awt.Color(51, 51, 51));
        battlepane.setMaximumSize(new java.awt.Dimension(220, 180));
        battlepane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                battlepaneKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                battlepaneKeyReleased(evt);
            }
        });
        battlepane.setLayout(null);

        square.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/cube.png"))); // NOI18N
        battlepane.add(square);
        square.setBounds(100, 80, 18, 20);

        getContentPane().add(battlepane);
        battlepane.setBounds(290, 290, 220, 180);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/battleground.png"))); // NOI18N
        getContentPane().add(Background);
        Background.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
      
        switch(evt.getKeyChar()){
           case 'w':
               uppressed = true;
           break;
           case 'a':
               leftpressed = true;
               break;
           case 'd':
               rightpressed = true;
               break;
           case 's':
               downpressed = true;
               break;
       }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
       
        switch(evt.getKeyChar()){
           case 'w':
               uppressed = false;
               break;
           case 'a':
               leftpressed = false;
               break;
           case 'd':
               rightpressed = false;
               break;
           case 's':
               downpressed = false;
               break;
       }
    }//GEN-LAST:event_formKeyReleased

    private void battlepaneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_battlepaneKeyPressed
     
    }//GEN-LAST:event_battlepaneKeyPressed

    private void battlepaneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_battlepaneKeyReleased
        
    }//GEN-LAST:event_battlepaneKeyReleased

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
      if(evt.getKeyChar()==' ' &&!this.attackhappening){
          try {
              attackEnemy();
          } catch (InterruptedException ex) {
              Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
          }
      }
    }//GEN-LAST:event_formKeyTyped

    public void attackEnemy() throws InterruptedException{
        atayckbutton.setVisible(false);
        if(enemy.takeDamage()){
           this.endMusic();
           m.endCombat(true);
        }
        
        else{
           BattleRenderer bp = new BattleRenderer(this,this.battlepane);
           bp.start();
          
        }
    }
    
    public boolean checkCollisions(int x,int y, int a,int b,int s){
        return Math.sqrt(Math.pow(a-x,2)+Math.pow(b-y,2))<=s;
        
    }
    
    public void takeDamage(int amount){
        InputStream in;
        AudioStream a;
        try {
            in = new FileInputStream(Scenery.class.getResource("../assets/43.wav").getFile());
            a = new AudioStream(in);
            AudioPlayer ap = AudioPlayer.player;
            ap.start(a);
        } catch (IOException ex) {
            Logger.getLogger(Scenery.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(m.p.takeDamage(amount)){
            
            this.endMusic();
            
            m.endCombat(false);
        }
        this.hplabel.setText("Hp:"+m.p.hp+"/100");
    }
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JLabel atayckbutton;
    private javax.swing.JPanel battlepane;
    private javax.swing.JLabel enemyicon;
    private javax.swing.JLabel hplabel;
    private javax.swing.JLabel square;
    // End of variables declaration//GEN-END:variables
}
